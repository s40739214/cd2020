var tipuesearch = {"pages": [{'title': 'Weeks', 'text': 'week1-5 \n', 'tags': '', 'url': 'Weeks.html'}, {'title': 'week1-5', 'text': 'week1 \n 1.在github建立新倉儲cd2020 \n 2.將倉儲git clone下來 \n 3.用git submodule add指令下載子模組(指令：git submodule add https://github.com/mdecourse/cmsimde.git cmsimde) \n 4.進入倉儲資料夾中tmp>cd2020>cmsimde> up_dir將檔案全選後複製到倉儲資料夾中 \n 5.輸入 python wsgi.py 開啟近端 \n 6.成功開啟後就可以開始編輯，編輯完後將網頁轉成靜態頁面，再將檔案push就完成了 \n 影片連結： https://youtu.be/NOnSq3zrxDg \n \n week2 \n Python3.7.3升級至Python3.8.2 \n 1.在2019fall裡建立cd2020 \n 2.cd2020內新增data，在data底下新增py32、wscite432、portablegit \n 3.至Python官網找3.8.2版本，拉到最底下點選Windows x86-64 executable installer下載安裝檔，路徑設定到data/py382 \n ※選項pip取消勾選 \n 4.下載SciTE系統，下載完後解壓縮至data/wsite432 \n 5.建立新的start.bat、stop.bat \n \n \n 6. 下載MSY32 至data下 \n 7.下載Portable Git\xa064-bit Git for Windows Portable \xa0至 data/ portablegit \n 8.執行指令，輸入 python get - pip.py、pip install flask bs4 lxml pelican markdown flask_cors leo \n 影片連結： https://www.youtube.com/watch?v=geKi4BFJb3Y \n \n 第三組第一次直播會議 \n 會議流程 : 1. 直播會議 , 組員簽到 \xa0 2.討論工作分配 3.問題提問 \n 作業一: 1.請描述如何針對該課程進行有效的隨機分組，或者隨機進行點名？ 2.描述如何為Windows 10 64位系統準備一個可移植的Python編程系統，以允許在Github上維護CMSiMDE網站，Pelican博客和js演示文稿？ 3.您需要從 http://www.coppeliarobotics.com/helpFiles/index.html 了解什麼來實現四輪機器人？ \n 注意事項: 1.作業一必須在 3/26 前完成，並上傳 pdf 檔到個人倉儲的 download 上。 2.每周務必上傳進度。 \n 3.不會做的可以問會的同學或在 gitter 上發問。 4.請依每個人的作業一 pdf 檔、網站內容，進行互評。 https://docs.google.com/forms/d/e/1FAIpQLSeBw2zOZZvLzREkonbtrEeMLixmSVqsxGwq7LZekra2lcBXgQ/viewform \n 工作分配： \n \n week3 \n 作業一 ：請描述如何針對該課程進行有效的隨機分組，或者隨機進行點名？ \n PDF： https://github.com/s40739214/cd2020/tree/master/downloads \n 影片連結： https://youtu.be/8DPiM75fRQQ \n \n', 'tags': '', 'url': 'week1-5.html'}, {'title': 'Assignments', 'text': '', 'tags': '', 'url': 'Assignments.html'}, {'title': 'Assignment1', 'text': '', 'tags': '', 'url': 'Assignment1.html'}, {'title': 'Random grouping', 'text': 'Describe how to do an efficient random grouping for this course or do the roll calling randomly? \n * 在亂數分 組及隨機點名的程式中，利用 Dart 內的 HTML 進行操作 \n PDF： https://github.com/s40739214/cd2020/tree/master/downloads \n 影片連結： https://www.youtube.com/watch?v=8DPiM75fRQQ \n \n 亂數分組 \n Step1：至 mde.tw課程網頁  ( mde.tw/About/Grouping )  點選〝 Dart 〞 \n \n Step2：複製 note 那邊的網址，並將 0767(2a) 改成 0780(2b) \n \n Step3：複製更改後的網址貼上 HTML ，並按下 Run \n \n Step4：按下開始分組，即可完成亂數分組！ \n \n --------------------------------------------------------------------------------------------------------------------------------------------------------------------- \n 隨機點名 \n * 利用random.sample： random.sample(sequence, k)，從指定序列中隨機獲取指定長度的片斷。 參考連結 \n Step1：複製剛產生的分組成員名單，貼到 Python3 線上 編譯器 \n Step2：輸入圖片中的語法，在一個 group 中進行抽點， group2 、 group3 、group4以此類推 \n \n Step3：輸入完畢確認無誤後按下run，即可完成隨機點名！ \n \n', 'tags': '', 'url': 'Random grouping.html'}, {'title': 'Portable system', 'text': 'Describe how to prepare a portable Python programming system for Windows 10 64bit system to allow one the maintain CMSiMDE website, Pelican blog and Reveal.js presentation on Github? \n 影片連結： https://www.youtube.com/watch?v=geKi4BFJb3Y \n Python3.7.3 升級至 Python3.8.2 \n (1) 在 2019fall 裡建立 cd2020 \n (2) cd2020內新增 data ，在 data 底下新增 py32 、 wscite432 、 portablegit \n (3) 至 Python 官網找 3.8.2 版本，拉到最底下點選 Windows x86-64 \xa0 \n \xa0\xa0\xa0 executable installer下載安裝檔，路徑設定到 data/py382 \n ※選項pip取消勾選 \n (4) 下載 SciTE 系統，下載完後解壓縮至 data/wsite432 \n (5) 建立新的 start.bat 、 stop.bat \n @echo off\nset Disk=y\nsubst %Disk%: "data"\n  \n%Disk%:\n  \nset HomePath=%Disk%:\\home\nset HomeDrive=%Disk%:\\home\nset Home=%Disk%:\\home\nset USERPROFILE=%Disk%:\\home\n  \nREM å°‡ç³»çµ± Python ç¨‹å¼\x8fçš„ io è¨\xadç‚º utf-8\nset PYTHONIOENCODING="utf-8"\n  \n#REM for putty\n#Set GIT_HOME=%CDisk%:\\portablegit\\bin\\\n#Set GIT_SSH=%Disk%:\\putty\\plink.exe\n  \nset PYTHONPATH=%Disk%:\\py382\\DLLs;%Disk%:\\py382\\Lib;%Disk%:\\py382\\Lib\\site-packages;\nset PYTHONHOME=%Disk%:\\py382\n  \nset path_python=%Disk%:\\py382;%Disk%:\\py382\\Scripts;\nset path_msys2=%Disk%:\\msys64\\mingw64\\bin;\nset path_git=%Disk%:\\portablegit\\bin;\nset path_tcc=%Disk%:\\tcc;\n  \npath=%Disk%:;%path_python%;%path_msys2%;%path_git%;%path_tcc%;\n  \nstart /MIN cmd.exe\nstart /MIN cmd.exe\nstart /MIN cmd.exe\nstart /MIN cmd.exe\n  \nstart /MIN %Disk%:\\wscite432\\wscite\\SciTE.exe\nstart /MIN %Disk%:\\wscite432\\wscite\\SciTE.exe\n  \nExit \n \n @echo off\nset Disk=y\npath=%PATH%;\n  \ntaskkill /IM python.exe /F\ntaskkill /IM pythonw.exe /F\ntaskkill /IM scite.exe /F\n  \nREM çµ‚æ\xad¢è™›æ“¬ç¡¬ç¢Ÿèˆ‡ç›®éŒ„çš„å°\x8dæ‡‰\nsubst %Disk%: /D\nREM é—œé–‰ cmd æŒ‡ä»¤è¦–çª—\ntaskkill /IM cmd.exe /F\n  \nEXIT\n \n (6) 下載 MSY32 至 data 下 \n (7) 下載 Portable Git 64-bit Git for Windows Portable  至  data/portablegit \n (8) 執行指令，輸入 python get-pip.py 、 pip install flask bs4 lxml pelican  \n \xa0\xa0\xa0 markdown flask_cors leo \n', 'tags': '', 'url': 'Portable system.html'}, {'title': 'Four wheel car', 'text': 'What do you need to know from  http://www.coppeliarobotics.com/helpFiles/index.html  to implement a four-wheeled robot? \n Simulation&Simulation settings dialog \n \xa0 任何機器製作完成後，都需要進行模擬測試，以確保機器能正常運作，或者測試機器的耐用性及安全性。在這兩章節主要說明了如何建立模擬，也教了如何調整模擬的速度，這能使我們模擬起來更有效率，也講解了在模擬過程可能會發生的狀況及解決方法 \n BubbleRob tutorial \n \xa0 此教程主要在教如何設置 bubbleRob 機器人，不只是設置模型外型及尺寸，還要設置模型的物理屬性；設置感測器則是為了偵測障礙物，讓機器人能順利避開障礙物；視覺感測器則是為了能夠讓我們在機器人模擬時觀察機器人前方狀況。 \n Line following BubbleRob tutorial \n \xa0在此教程中，旨在擴展 BubbleRob 的功能，以使 BubbleRob 遵循地面上的規則，也就是調整視覺感測器並設置路徑及給定程式碼，使機器人能隨著路徑運作。 \n External controller tutorial \n \xa0 此教程說明多種方式能從外部控制機器人及模擬機器人，最方便的就是編寫程式碼直接附加到場景；另外還有利用編寫插件的方法。 \n', 'tags': '', 'url': 'Four wheel car.html'}, {'title': 'About', 'text': '此內容管理系統以\xa0 https://github.com/mdecourse/cmsimde \xa0作為 submodule 運作, 可以選定對應的版本運作, cmsimde 可以持續改版, 不會影響之前設為 submodule, 使用舊版 cmsimde 模組的內容管理相關運作. \n 利用 cmsimde 建立靜態網誌方法: \n 1. 在 github 建立倉儲, git clone 到近端 \n 2. 參考\xa0 https://github.com/mdecourse/newcms , 加入除了 cmsimde 目錄外的所有內容 \n 以 git submodule add\xa0 https://github.com/mdecourse/cmsimde \xa0cmsimde \n 建立 cmsimde 目錄, 並從 github 取下子模組內容. \n 3.在近端維護時, 更換目錄到倉儲中的 cmsimde, 以 python wsgi.py 啟動近端網際伺服器. \n 動態內容編輯完成後, 以 generate_pages 轉為靜態內容, 以 git add commit 及 push 將內容推到遠端. \n 4. 之後若要以 git clone 取下包含 submodule 的所有內容, 執行: \n git clone --recurse-submodules  https://github.com/mdecourse/newcms.git \n', 'tags': '', 'url': 'About.html'}, {'title': 'Develop', 'text': 'https://github.com/mdecourse/cmsimde \xa0的開發, 可以在一個目錄中放入 cmsimde, 然後將 up_dir 中的內容放到與 cmsimde 目錄同位階的地方, 使用 command 進入 cmsimde 目錄, 執行 python wsgi.py, 就可以啟動, 以瀏覽器 https://localhost:9443\xa0就可以連接, 以 admin 作為管理者密碼, 就可以登入維護內容. \n cmsimde 的開發採用 Leo Editor, 開啟 cmsimde 目錄中的 cmsimde.leo 就可以進行程式修改, 結束後, 若要保留網際內容, 只要將 cmsimde 外部的內容倒回 up_dir 目錄中即可後續對 cmsimde 遠端倉儲進行改版. \n init.py 位於\xa0 up_dir 目錄, 可以設定 site_title 與 uwsgi 等變數.', 'tags': '', 'url': 'Develop.html'}]};